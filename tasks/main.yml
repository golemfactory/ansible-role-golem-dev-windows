---
# tasks file for golem-dev-windows

- name: create the BuildResources directory
  win_file:
    path: '{{ build_resources_dir }}'
    state: directory


# wheel mirrored from http://www.lfd.uci.edu/~gohlke/pythonlibs/#pywin32
- name: download resources for the build tasks
  win_get_url:
    url: "{{ buildbot_build_resources_url }}"
    dest: '{{ buildbot_build_resources_path }}'
    force: no


- name: check if hyperg installed
  win_stat:
    path: '{{ build_resources_dir }}\hyperg'
  register: hyperg_exists


- name: download hyperg for the build tasks
  win_get_url:
    url: "{{ hyperg_package_url }}"
    dest: '{{ hyperg_package_path }}'
    force: no
  when: not hyperg_exists.stat.exists


- name: unzip hyperg for the build tasks
  win_unzip:
    src: '{{ hyperg_package_path }}'
    dest: '{{ build_resources_dir }}'
    delete_archive: yes
  when: not hyperg_exists.stat.exists


- name: check if geth installed
  win_stat:
    path: '{{ geth_install_dir }}'
  register: geth_exists


- name: download geth for the build tasks
  win_get_url:
    url: "{{ geth_package_url }}"
    dest: '{{ geth_package_path }}'
    force: no
  when: not geth_exists.stat.exists

- name: unzip geth for the build tasks
  win_unzip:
    src: '{{ geth_package_path }}'
    dest: '{{ build_resources_dir }}'
    delete_archive: yes
  when: not geth_exists.stat.exists


- name: check if electron installed
  win_stat:
    path: '{{ golem_electron_path }}'
  register: electron_exists

- name: download electron for the build tasks
  win_get_url:
    url: "{{ golem_electron_url }}"
    dest: '{{ golem_electron_package_path }}'
    force: no
  when: not electron_exists.stat.exists

- name: unzip electron for the build tasks
  win_unzip:
    src: '{{ golem_electron_package_path }}'
    dest: '{{ build_resources_dir }}'
    delete_archive: yes
  when: not electron_exists.stat.exists


- name: download docker_toolbox for the build tasks
  win_get_url:
    url: "{{ docker_package_url }}"
    dest: '{{ docker_package_path }}'
    force: no
  args:
    creates: '{{ docker_package_path }}'


- name: download vc_redist for the build tasks
  win_get_url:
    url: "{{ vc_redist_url }}"
    dest: '{{ vc_redist_path }}'
    force: no
  args:
    creates: '{{ vc_redist_path }}'



- name: Download rust-init
  become: yes
  become_user: "{{worker_user}}"
  win_get_url:
    url: https://win.rustup.rs/x86_64
    dest: '{{_worker_user_home}}\rustup-init.exe'
  args:
    creates: '{{_worker_user_home}}\.cargo'

- name: Install rust
  become: yes
  become_user: "{{worker_user}}"
  win_shell:
    '{{_worker_user_home}}\rustup-init.exe -y --default-host x86_64-pc-windows-msvc --default-toolchain stable-msvc'
  args:
    creates: '{{_worker_user_home}}\.cargo'

- name: Clean rust Installer
  win_file:
    path: '{{_worker_user_home}}\rustup-init.exe'
    state: absent

- name: Install rust nightly
  become: yes
  become_user: "{{worker_user}}"
  win_shell:
    rustup install nightly

- name: Install grcov
  become: yes
  become_user: "{{worker_user}}"
  win_shell: cargo install grcov
  args:
    creates: '{{_worker_cargo_bin_dir}}\grcov.exe'

- name: Add a powershell module
  win_psmodule:
    name: Pscx
    state: present
    allow_clobber: True

- name: Grab clang binaries
  win_get_url:
    url: https://github.com/marco-c/llvm-appveyor/releases/download/llvm_342383/clang.tar.bz2
    dest: '{{_worker_user_home}}\clang.tar.bz2'
    creates: C:\BuildResources\clang

- name: install llvm 7.0
  become: yes
  become_user: "{{worker_user}}"
  win_unzip:
    src: '{{_worker_user_home}}\clang.tar.bz2'
    dest: '{{_worker_user_home}}\clang'
    creates: C:\BuildResources\clang

- name: install llvm 7.0
  become: yes
  become_user: "{{worker_user}}"
  win_unzip:
    src: '{{_worker_user_home}}\clang\clang.tar'
    dest: C:\BuildResources\clang
    creates: C:\BuildResources\clang

- name: Clean llvm Installer temp archive
  win_file:
    path: '{{_worker_user_home}}\clan'
    state: absent

- name: Clean llvm Installer download
  win_file:
    path: '{{_worker_user_home}}\clang.tar.bz2'
    state: absent
